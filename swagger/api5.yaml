openapi: 3.0.0
info:
  version: 1.0.0
  title : Social Media
  description: Sosial Media APP with Golang and React JS
  contact:
    name: Group5
    email: message@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
- url: https://app.swaggerhub.com/apis/GolangProject/SosialMedia/1.0.1
  description: SwaggerHub API Auto Mocking
tags:
- name: Auth
  description: User Data Management
- name: Users
  description: Organizing Data User
- name: News
  description: Oragnizing Data News
- name: Comment
  description: Oragnizing Data Comment
paths:
  /login:
    post:
      tags:
      - Auth
      summary: login user
      description: Login user bisa digunakan ketika user sudah registrasi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestLogin'
            example:
              email: jungkook@gmail.com
              password: 123
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseLoginSuccess'
              example:
                code: 200
                message: Success login!
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2MzgzMjYxODAsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.AebFR-oQjUSOMez2ucDWkiMrS2eQIPmcYm5c71qZ_co
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/400BadRequest"
              example:
                code: 400
                message: Incorrect email or password
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                type: string
              example:
                  code: 500
                  message: Internal server Error
                  
  /user:
    post:
      tags:
      - User
      summary: Registration User
      description: Semua data harus diisi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestRegistrasi'
            example:
              username: jungkook
              email: jungkook@gmail.com
              password: jung123
              fullname: jungkook bts
              photo: jungkook.jpg
      responses:
        "200":
          description: Success Registration
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
              example:
                code: 200
                message: Registration Success
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelUser'
              example:
                code: 400
                message: all input must be filled
        "500":
          description: Internal server Error
          content:
            application/json:
              schema:
                type: string
              example:
                  code: 500
                  message: Internal server Error
    get:
      tags:
